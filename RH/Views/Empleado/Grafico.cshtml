@{
    Layout = "Vista";
}
@model Nomina
<label for="myChart">Horas trabajadas</label>
<div class="w-96 h-full flex justify-center items-center bg-white rounded-md">
<canvas id="myChart" class="max-w-full max-h-screen"></canvas>
</div>


<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    var ctx = document.getElementById('myChart').getContext('2d');
    var myChart = new Chart(ctx, {
        type: 'doughnut', // Cambia el tipo de gráfico a doughnut
        data: {
            labels: ['Cantidad Horas', 'Aumento', 'Descuento'],
            datasets: [{
                label: 'Nómina',
                data: [@Model.CanHoras, @Model.Aumento, @Model.Descuento],
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)'
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });
</script>
<script>
    window.addEventListener('resize', ajustarCanvas);

function ajustarCanvas() {
    var canvas = document.getElementById('myChart');
    var container = document.querySelector('.w-full.h-screen');
    canvas.width = container.clientWidth;
    canvas.height = container.clientHeight;
    
    // Agrega aquí el código para volver a dibujar contenido en el Canvas, si es necesario.
}

</script>
